#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Возвращает описание мерча, пока считаем, что актуален весь мерч, который есть на остатках
//			
// Параметры:
//  Дата - Дата - Дата на которую получаем остаток
// 
// Возвращаемое значение:
//  Массив Структур - Массив со ссылками на задачи Поля:
//  		Ссылка - СправочникСсылка.Квесты - Ссылка на квест
//  		Представление - Строка - Представление ссылки для ТГ  
//
Функция ПолучитьСписокМерча(Дата = Неопределено) Экспорт
	ОбщийМодульСервер.ДатаЗапросаПоУмолчанию(Дата);
	МассивВозврата = Новый Массив;
	// TODO: Позже, добавить в представление стоимость, или остаток
	ШаблонПредставления = "%1"; 
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ОстаткиМерчаОстатки.Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(ОстаткиМерчаОстатки.Номенклатура) КАК НоменклатураПредставление,
	|	ОстаткиМерчаОстатки.КоличествоОстаток,
	|	ОстаткиМерчаОстатки.Номенклатура.СтоимостьЗолото КАК СтоимостьЗолото,
	|	ОстаткиМерчаОстатки.Номенклатура.СтоимостьСеребро КАК СтоимостьСеребро
	|ИЗ
	|	РегистрНакопления.ОстаткиМерча.Остатки(&Дата,) КАК ОстаткиМерчаОстатки";
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивВозврата.Добавить(Новый Структура("Ссылка, Представление", 
												Выборка.Номенклатура, 
												СтрШаблон(ШаблонПредставления, Выборка.НоменклатураПредставление)));
	КонецЦикла;
	Возврат МассивВозврата;
КонецФункции

// Возвращает описание конкретной единицы мерча, по ссылке
//			
// Параметры:
//  Ссылка - СправочникСсылка.НоменклатураМерча - Ссылка на мерч, по которому получаем описание
// 
// Возвращаемое значение:
//  Структура
//  	Сообщение - Сообщение для вывода в телеграмм
//  	Картинка - Адрес картинки во временном хранилище
//  	Команды - Массив структур
//  				Наименование - Представление команды
//  				id - идентификатор команды
//
Функция ОписаниеМерча(Ссылка) Экспорт
	СтруктураВозврата = ОбщийМодульСервер.СтруктураВозвратаДляТГ_СообщениеКоманды();
	СтруктураВозврата.Вставить("Картинка", "");
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	НоменклатураМерча.Наименование,
	|	НоменклатураМерча.Картинка,
	|	НоменклатураМерча.СтоимостьЗолото,
	|	НоменклатураМерча.СтоимостьСеребро,
	|	НоменклатураМерча.Описание
	|ИЗ
	|	Справочник.НоменклатураМерча КАК НоменклатураМерча
	|ГДЕ
	|	НоменклатураМерча.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		СтруктураВозврата.Сообщение = "Что-то пошло не так :(";
		Возврат СтруктураВозврата;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	ШаблонСообщения = "%1
	|Описание:
	|%2
	|Стоимость: %3 Золота, %4 Серебра";
	СтруктураВозврата.Сообщение = СтрШаблон(ШаблонСообщения, Выборка.Наименование, Выборка.Описание, Выборка.СтоимостьЗолото, Выборка.СтоимостьСеребро);
	СтруктураВозврата.Картинка = ПоместитьВоВременноеХранилище(Выборка.Картинка.Получить());
	СтруктураВозврата.Команды.Добавить(ОписаниеКомандыКупить());
	Возврат СтруктураВозврата;
КонецФункции

Функция ОписаниеКомандыКупить()
	Возврат Новый Структура("Наименование, id", "Купить", "Купить");
КонецФункции

// Производит покупку мерча по ссылке, если это возможно
//			
// Параметры:
//  Пользователь - СправочникСсылка.ФизическиеЛица - Ссылка Сотрудника, который покупает
//  Мерч - СправочникСсылка.НоменклатураМерча - Ссылка на мерч, для покупки
//  Дата - Дата - Дата покупки, по умолчанию - текущая дата
// 
// Возвращаемое значение:
//  Структура
//  	Сообщение - Сообщение для вывода в телеграмм
//  	Команды - Массив структур
//  				Наименование - Представление команды
//  				id - идентификатор команды
//
Функция КупитьМерч(Пользователь, Мерч, Дата = Неопределено) Экспорт
	ОбщийМодульСервер.ДатаЗапросаПоУмолчанию(Дата);
	СтруктураВозврата = ОбщийМодульСервер.СтруктураВозвратаДляТГ_СообщениеКоманды();
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ОстаткиМерчаОстатки.КоличествоОстаток, 0) КАК ОстатокМерча,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОстаткиМерчаОстатки.КоличествоОстаток, 0) > 0
	|		И ЕСТЬNULL(БалансПользователяОстатки.ЗолотоОстаток, 0) >= ЕСТЬNULL(ОстаткиМерчаОстатки.Номенклатура.СтоимостьЗолото,
	|			0)
	|		И ЕСТЬNULL(БалансПользователяОстатки.СереброОстаток,
	|			0) >= ЕСТЬNULL(ОстаткиМерчаОстатки.Номенклатура.СтоимостьСеребро, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВозможноКупить
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БалансПользователя.Остатки(&Дата, ФизическоеЛицо = &ФизическоеЛицо) КАК
	|			БалансПользователяОстатки
	|		ПО ФизическиеЛица.Ссылка = БалансПользователяОстатки.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиМерча.Остатки(&Дата, Номенклатура = &Номенклатура) КАК ОстаткиМерчаОстатки
	|		ПО ИСТИНА
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &ФизическоеЛицо";
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ФизическоеЛицо", Пользователь);
	Запрос.УстановитьПараметр("Номенклатура", Мерч);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		СтруктураВозврата.Сообщение = "Что-то пошло не так :(";
		Возврат СтруктураВозврата;
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Если НЕ Выборка.ВозможноКупить Тогда
		Если Выборка.ОстатокМерча <= 0 Тогда
			СтруктураВозврата.Сообщение("Недостаточно мерча на складе :(");
			Возврат СтруктураВозврата;
		Иначе
			СтруктураВозврата.Сообщение("Недостаточно средств на счете. Выполните еще задачи, или помогите кому-нибудь.");
			Возврат СтруктураВозврата;
		КонецЕсли;
	КонецЕсли;
	
	Док = Документы.РеализацияМерча.СоздатьДокумент();
	Док.Дата = Дата;
	Док.ФизическоеЛицо = Пользователь;
	Док.Номенклатура = Мерч;
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
		СтруктураВозврата.Сообщение = "Поздравляем с покупкой! Скоро расскажем, как ее получить.";
	Исключение
		СтруктураВозврата.Сообщение = "Что-то пошло не так :(";
		ЗаписьЖурналаРегистрации("Создание документа ""Спасибо""", УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Документы.Спасибо, , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецЕсли