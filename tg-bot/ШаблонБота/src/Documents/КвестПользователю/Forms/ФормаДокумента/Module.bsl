
&НаКлиенте
Процедура МодификаторыСтоимостиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	ПроверитьВозможностьИзмененияМодификаторов(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВозможностьИзмененияМодификаторов(Отказ)
	Если ЗначениеЗаполнено(Объект.ДатаВыдачи) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Нельзя менять состав модификаторов после выдачи квеста", , "Объект.ДатаВыдачи");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МодификаторыСтоимостиПередУдалением(Элемент, Отказ)
	ПроверитьВозможностьИзмененияМодификаторов(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыдачиПриИзменении(Элемент)
	ПроверитьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПроверитьДоступностьЭлементов();
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьДоступностьЭлементов();
	Если ЗначениеЗаполнено(Объект.ДатаВыдачи) Тогда
		Элементы.МодификаторыСтоимостиСтоимостьЗолото.Доступность = Ложь;
		Элементы.МодификаторыСтоимостиСтоимостьСеребро.Доступность = Ложь;
		Элементы.СтоимостьЗолото.Доступность = Ложь;
		Элементы.СтоимостьСеребро.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МодификаторыСтоимостиПроизошлоПриИзменении(Элемент)
	ПересчитатьКНачислению();	
КонецПроцедуры

&НаКлиенте
Процедура СтоимостьЗолотоПриИзменении(Элемент)
	ПересчитатьКНачислению();
КонецПроцедуры

&НаКлиенте
Процедура СтоимостьСереброПриИзменении(Элемент)
	ПересчитатьКНачислению();
КонецПроцедуры

&НаКлиенте
Процедура МодификаторыСтоимостиСтоимостьЗолотоПриИзменении(Элемент)
	ПересчитатьКНачислению();
КонецПроцедуры

&НаКлиенте
Процедура МодификаторыСтоимостиСтоимостьСереброПриИзменении(Элемент)
	ПересчитатьКНачислению();
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКНачислению()
	МодификаторЗолота = 0;
	МодификаторСеребра = 0;
	Для Каждого Строка Из Объект.МодификаторыСтоимости Цикл
		Если Строка.Произошло Тогда
			МодификаторЗолота = МодификаторЗолота + Строка.СтоимостьЗолото;
			МодификаторСеребра = МодификаторСеребра + Строка.СтоимостьСеребро;
		КонецЕсли;
	КонецЦикла;
	Если Объект.СтоимостьЗолото + МодификаторЗолота < 0 Тогда
		Объект.КНачислениюЗолото = 0;
		Объект.КНачислениюСеребро = 0;
	Иначе
		Объект.КНачислениюЗолото = Объект.СтоимостьЗолото + МодификаторЗолота;
			Пока Объект.СтоимостьСеребро + МодификаторСеребра < 0 
					И Объект.КНачислениюЗолото > 0  Цикл
				Объект.КНачислениюЗолото = Объект.КНачислениюЗолото - 1;
				МодификаторСеребра = МодификаторСеребра 
											+ ВалютаВызовСервера.ПеревестиЗолотоВСеребро(1, Объект.ДатаВыполнения);
			КонецЦикла;
		Если Объект.СтоимостьСеребро + МодификаторСеребра < 0 Тогда
			Объект.КНачислениюСеребро = 0;
		Иначе
			Объект.КНачислениюСеребро = Объект.СтоимостьСеребро + МодификаторСеребра;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КвестПриИзменении(Элемент)
	ЗаполнитьПоКвесту();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоКвесту()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Квесты.СтоимостьЗолото,
	|	Квесты.СтоимостьСеребро,
	|	Квесты.СтоимостьЗолото КАК КНачислениюЗолото,
	|	Квесты.СтоимостьСеребро КАК КНачислениюСеребро
	|ИЗ
	|	Справочник.Квесты КАК Квесты
	|ГДЕ
	|	Квесты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КвестыМодификаторыСтоимости.Модификатор,
	|	КвестыМодификаторыСтоимости.СтоимостьЗолото,
	|	КвестыМодификаторыСтоимости.СтоимостьСеребро
	|ИЗ
	|	Справочник.Квесты.МодификаторыСтоимости КАК КвестыМодификаторыСтоимости
	|ГДЕ
	|	КвестыМодификаторыСтоимости.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.Квест);
	Результаты = Запрос.ВыполнитьПакет();
	ДанныеКвеста = Результаты[0].Выбрать();
	ДанныеКвеста.Следующий();
	ЗаполнитьЗначенияСвойств(Объект, ДанныеКвеста);
	Объект.МодификаторыСтоимости.Загрузить(Результаты[1].Выгрузить());
КонецПроцедуры

